[Startuml, Name("skinparam"), Name("skinparamclassAttributeIconSize"), Name("skinparamclassAttributeIconSize0"), Class, Name("Held"), StartObject, Protected, Variable("name"), Type("String"), Protected, Variable("stärke"), Type("int"), Protected, Variable("lebenspunkte"), Type("int"), Protected, Variable("angriffswert"), Type("int"), Protected, Variable("waffe"), Type("Waffe"), Public, Name("addLebenspunkte"), StartMethod, Variable("faktor"), Type("int"), EndMethod, Type("boolean"), Public, Name("angreifen"), StartMethod, Variable("monster"), Type("Monster"), Variable("regel"), Type("Kampfregel"), EndMethod, Type("void"), Public, Abstract, Name("getAngriffswert"), StartMethod, EndMethod, Type("int"), EndObject, Class, Name("Zauberer"), StartObject, Private, Variable("zauberkraft"), Type("int"), Private, Static, Name("name"), StartMethod, EndMethod, Type("stat"), Public, Name("getAngriffswert"), StartMethod, EndMethod, Type("int"), Public, Name("heilen"), StartMethod, Variable("held"), Type("Held"), EndMethod, Type("void"), EndObject, Name("Zauberer"), InheritesLeft, Private, Private, Name("Held"), Enduml]
Zauberer is a child
Private
Private
Name("Held")
Held is a master
[Class { name: "Held", attributes: [Attribute { view: Normal, name: "name", vartype: Other("String"), is_final: false }, Attribute { view: Normal, name: "stärke", vartype: Other("int"), is_final: false }, Attribute { view: Normal, name: "lebenspunkte", vartype: Other("int"), is_final: false }, Attribute { view: Normal, name: "angriffswert", vartype: Other("int"), is_final: false }, Attribute { view: Normal, name: "waffe", vartype: Other("Waffe"), is_final: false }, Attribute { view: Normal, name: "regel", vartype: Other("Kampfregel"), is_final: false }], methods: [Function { name: "addLebenspunkte", view: Normal, returntype: Other("boolean"), parameters: [Attribute { view: Normal, name: "faktor", vartype: Other("int"), is_final: false }], is_abstract: false }, Function { name: "angreifen", view: Normal, returntype: Other("void"), parameters: [Attribute { view: Normal, name: "monster", vartype: Other("Monster"), is_final: false }, Attribute { view: Normal, name: "regel", vartype: Other("Kampfregel"), is_final: false }], is_abstract: false }, Function { name: "getAngriffswert", view: Normal, returntype: Other("int"), parameters: [], is_abstract: true }], view: Public, is_abstract: false, inherits: Some(Class { name: "Zauberer", attributes: [Attribute { view: Normal, name: "zauberkraft", vartype: Other("int"), is_final: false }], methods: [Function { name: "name", view: Normal, returntype: Other("stat"), parameters: [], is_abstract: false }, Function { name: "getAngriffswert", view: Normal, returntype: Other("int"), parameters: [], is_abstract: false }, Function { name: "heilen", view: Normal, returntype: Other("void"), parameters: [Attribute { view: Normal, name: "held", vartype: Other("Held"), is_final: false }], is_abstract: false }], view: Public, is_abstract: false, inherits: None }) }, Class { name: "Zauberer", attributes: [Attribute { view: Normal, name: "zauberkraft", vartype: Other("int"), is_final: false }], methods: [Function { name: "name", view: Normal, returntype: Other("stat"), parameters: [], is_abstract: false }, Function { name: "getAngriffswert", view: Normal, returntype: Other("int"), parameters: [], is_abstract: false }, Function { name: "heilen", view: Normal, returntype: Other("void"), parameters: [Attribute { view: Normal, name: "held", vartype: Other("Held"), is_final: false }], is_abstract: false }], view: Public, is_abstract: false, inherits: None }]
successfully wrote to ./java_folder/Held.java
successfully wrote to ./java_folder/Zauberer.java
